{"ast":null,"code":"var _jsxFileName = \"/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/src/components/DrPoll.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DrPoll(props) {\n  let lastNames = [];\n\n  for (let i = 0; i < props.drivers.length; i++) {\n    lastNames.push(props.drivers[i].slice(3));\n  }\n\n  function click(button) {\n    if (button.classList.contains(\"active\")) {\n      button.classList.remove(\"active\");\n    } else {\n      button.classList.add(\"active\");\n    }\n  }\n\n  let dataset = [{\n    axis: 'y',\n    label: '',\n    data: [95, 90, 85, 80, 75, 70, 65, 60, 50, 55, 45, 40, 35, 25, 30, 25, 20, 15, 10, 5],\n    backgroundColor: props.bgColors,\n    borderColor: props.colors,\n    borderWidth: 1\n  }];\n  let options = {\n    indexAxis: 'y',\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let label = context.parsed.x + \"% of Community\";\n            return label;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: false,\n          text: \"% of Community that Deems Driver as Valuable\",\n          padding: 20,\n          color: \"rgb(255, 255, 255)\",\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 20\n          }\n        },\n        ticks: {\n          callback: function (value) {\n            return value + '%';\n          },\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 15\n          }\n        },\n        grid: {\n          color: \"rgba(101,101,101, 0.1)\"\n        },\n        position: \"top\"\n      },\n      y: {\n        title: {\n          display: false\n        },\n        ticks: {\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 15\n          }\n        },\n        min: 0,\n        max: 100,\n        grid: {\n          color: \"rgba(101,101,101, 0.1)\"\n        }\n      }\n    },\n    maintainAspectRatio: false\n  };\n  const data = {\n    labels: props.drivers,\n    datasets: dataset\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"poll-title\",\n      children: \"F1 Community on Drivers' Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"poll-question\",\n        children: \"Which drivers currently have the best value?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: lastNames[0],\n          className: \"custom-btn first-btn\",\n          type: \"button\",\n          value: props.drivers[0],\n          onClick: () => click(document.getElementById(lastNames[0])),\n          children: props.drivers[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), props.drivers.slice(1, props.drivers.length - 1).map((name, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          id: lastNames[index + 1],\n          className: \"custom-btn\",\n          type: \"button\",\n          value: name,\n          onClick: () => click(document.getElementById(lastNames[index + 1])),\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: lastNames[19],\n          className: \"custom-btn last-btn\",\n          type: \"button\",\n          value: props.drivers[19],\n          onClick: () => click(document.getElementById(lastNames[19])),\n          children: props.drivers[19]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"results-axis\",\n        children: \"% of Community that Deems Each Driver as Valuable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-chart\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_c = DrPoll;\nexport default DrPoll;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrPoll\");","map":{"version":3,"sources":["/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/src/components/DrPoll.js"],"names":["React","Bar","DrPoll","props","lastNames","i","drivers","length","push","slice","click","button","classList","contains","remove","add","dataset","axis","label","data","backgroundColor","bgColors","borderColor","colors","borderWidth","options","indexAxis","plugins","legend","display","tooltip","callbacks","context","parsed","x","scales","title","text","padding","color","font","family","weight","size","ticks","callback","value","grid","position","y","min","max","maintainAspectRatio","labels","datasets","document","getElementById","map","name","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\n\nfunction DrPoll(props) {\n    let lastNames = [];\n    for (let i = 0; i < props.drivers.length; i++) {\n        lastNames.push(props.drivers[i].slice(3));\n    }\n\n    function click(button) {\n        if (button.classList.contains(\"active\")) {\n            button.classList.remove(\"active\");\n        } else {\n            button.classList.add(\"active\");\n        }\n    }\n\n    let dataset = [{\n        axis: 'y',\n        label: '',\n        data: [95, 90, 85, 80, 75, 70, 65, 60, 50, 55, 45, 40, 35, 25, 30, 25, 20, 15, 10, 5],\n        backgroundColor: props.bgColors,\n        borderColor: props.colors,\n        borderWidth: 1\n    }]\n\n    let options = {\n        indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n            },\n            tooltip: {\n                callbacks: {\n                    label: function(context) {\n                        let label = context.parsed.x + \"% of Community\";\n                        return label;\n                    }\n                }\n            }\n        },\n        scales: {\n            x: {\n                title: {\n                    display: false,\n                    text: \"% of Community that Deems Driver as Valuable\",\n                    padding: 20,\n                    color: \"rgb(255, 255, 255)\",\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 20\n                    }\n                },\n                ticks: {\n                    callback: function(value) {\n                        return value + '%';\n                    },\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 15\n                    }\n                },\n                grid: {\n                    color: \"rgba(101,101,101, 0.1)\"\n                },\n                position: \"top\"\n                \n            },\n            y: {\n                title: {\n                    display: false\n                },\n                ticks: {\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 15\n                    }\n                },\n                min: 0,\n                max: 100,\n                grid: {\n                    color: \"rgba(101,101,101, 0.1)\"\n                }\n            }\n        },\n        maintainAspectRatio: false\n    }\n\n    const data = {\n        labels: props.drivers,\n        datasets: dataset\n    }\n\n    return (\n        <div className=\"poll-section\">\n            <h2 className=\"poll-title\">F1 Community on Drivers' Value</h2>\n            <div className=\"poll\">\n                <h3 className=\"poll-question\">Which drivers currently have the best value?</h3>\n                <form className=\"form\">\n                    <button id={lastNames[0]} className=\"custom-btn first-btn\" type=\"button\" value={props.drivers[0]} onClick={() => click(document.getElementById(lastNames[0]))}>{props.drivers[0]}</button>\n                    {(props.drivers.slice(1, props.drivers.length - 1)).map((name, index) => (\n                        <button id={lastNames[index + 1]} className=\"custom-btn\" type=\"button\" value={name} onClick={() => click(document.getElementById(lastNames[index + 1]))}>{name}</button>\n                    ))}\n                    <button id={lastNames[19]} className=\"custom-btn last-btn\" type=\"button\" value={props.drivers[19]} onClick={() => click(document.getElementById(lastNames[19]))}>{props.drivers[19]}</button>\n                </form>\n                <button type=\"submit\" className=\"submit-btn\">Submit</button>\n            </div>\n            <div className=\"results\">\n                <h3 className=\"results-axis\">% of Community that Deems Each Driver as Valuable</h3>\n                <div className=\"results-chart\">\n                    <Bar data={data} options={options} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default DrPoll;"]},"metadata":{},"sourceType":"module"}