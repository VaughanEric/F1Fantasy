{"ast":null,"code":"var _jsxFileName = \"/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/frontend/src/components/Poll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport mongodbUpdate from '../services/mongodbUpdate';\nimport mongodbRetrieve from '../services/mongodbRetrieve';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Poll(props) {\n  _s();\n\n  let playerClass = props.playerClass;\n  let idNames = props.idNames;\n  console.log(idNames);\n  let submitIdName = props.submitIdName;\n  let displayNames = props.displayNames;\n  let position = props.position;\n  const [playerPercentages, setPlayerPercentages] = useState([]);\n  useEffect(() => {\n    console.log(\"Values changed\", props.idNames);\n    getDataOnLoad();\n  }, [props.idNames]);\n\n  async function getDataOnLoad() {\n    let response = await mongodbRetrieve(playerClass, idNames);\n    setPlayerPercentages(response.data.data.playerData.percentages);\n  }\n\n  function playerClick(button) {\n    if (button.classList.contains('active')) {\n      button.classList.remove('active');\n    } else {\n      button.classList.add('active');\n    }\n  }\n\n  async function submitClick() {\n    let buttons = [];\n    let activeButtonIds = [];\n    buttons = document.getElementsByClassName(playerClass);\n\n    for (let i = 0; i < buttons.length; i++) {\n      if (buttons[i].classList.contains('active')) {\n        activeButtonIds.push(buttons[i].id);\n        buttons[i].classList.remove('active');\n      }\n    } // console.log(idNames);\n    // console.log('Hi 1111');\n\n\n    await mongodbUpdate(activeButtonIds, playerClass);\n    setTimeout(async function () {\n      let response = await mongodbRetrieve(playerClass, idNames); // console.log('Hi 3333');\n      // console.log(response);\n\n      setPlayerPercentages(response.data.data.playerData.percentages);\n    }, 150); // console.log(idNames);\n    // let response = await mongodbRetrieve(playerClass, idNames);\n    // console.log('Hi 3333');\n    //     // console.log(response);\n    // setPlayerPercentages(response.data.data.playerData.percentages);\n  }\n\n  console.log(playerPercentages);\n  let dataset = [{\n    axis: 'y',\n    label: '',\n    data: playerPercentages,\n    backgroundColor: props.bgColors,\n    borderColor: props.colors,\n    borderWidth: 2\n  }];\n  let options = {\n    indexAxis: 'y',\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let label = context.parsed.x + '% of Community';\n            return label;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: false,\n          text: `% of Community that Deems ${position} as Valuable`,\n          padding: 20,\n          color: 'rgb(255, 255, 255)',\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 20\n          }\n        },\n        ticks: {\n          callback: function (value) {\n            return value + '%';\n          },\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 15\n          }\n        },\n        grid: {\n          color: 'rgba(101,101,101, 0.1)'\n        },\n        position: \"top\"\n      },\n      y: {\n        title: {\n          display: false\n        },\n        ticks: {\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 15\n          }\n        },\n        grid: {\n          color: \"rgba(101,101,101, 0.1)\"\n        }\n      }\n    },\n    maintainAspectRatio: false\n  };\n  const data = {\n    labels: displayNames,\n    datasets: dataset\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"poll-title\",\n      children: [\"F1 Community on \", position, \"s' Value\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"poll-question\",\n        children: [\"Which \", position, \"s currently have the best value?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: idNames[0],\n          className: `custom-btn first-btn ${playerClass}`,\n          type: \"button\",\n          value: idNames[0],\n          onClick: () => playerClick(document.getElementById(idNames[0])),\n          children: displayNames[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), displayNames.slice(1, displayNames.length - 1).map((name, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          id: idNames[index + 1],\n          className: `custom-btn ${playerClass}`,\n          type: \"button\",\n          value: name,\n          onClick: () => playerClick(document.getElementById(idNames[index + 1])),\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: idNames[idNames.length - 1],\n          className: `custom-btn last-btn ${playerClass}`,\n          type: \"button\",\n          value: idNames[idNames.length - 1],\n          onClick: () => playerClick(document.getElementById(idNames[idNames.length - 1])),\n          children: displayNames[idNames.length - 1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: submitIdName,\n        className: \"submit-btn\",\n        type: \"submit\",\n        onClick: submitClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: position,\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"results-axis\",\n        children: [\"% of Community that Deems Each \", position, \" as Valuable\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Poll, \"tf81TVoASUXc9gdqlsl4yc7X1e4=\");\n\n_c = Poll;\nexport default Poll;\n\nvar _c;\n\n$RefreshReg$(_c, \"Poll\");","map":{"version":3,"sources":["/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/frontend/src/components/Poll.js"],"names":["React","useEffect","useState","Bar","mongodbUpdate","mongodbRetrieve","Poll","props","playerClass","idNames","console","log","submitIdName","displayNames","position","playerPercentages","setPlayerPercentages","getDataOnLoad","response","data","playerData","percentages","playerClick","button","classList","contains","remove","add","submitClick","buttons","activeButtonIds","document","getElementsByClassName","i","length","push","id","setTimeout","dataset","axis","label","backgroundColor","bgColors","borderColor","colors","borderWidth","options","indexAxis","plugins","legend","display","tooltip","callbacks","context","parsed","x","scales","title","text","padding","color","font","family","weight","size","ticks","callback","value","grid","y","maintainAspectRatio","labels","datasets","getElementById","slice","map","name","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nimport mongodbUpdate from '../services/mongodbUpdate';\nimport mongodbRetrieve from '../services/mongodbRetrieve';\n\n\nfunction Poll(props) {\n    let playerClass = props.playerClass\n    let idNames = props.idNames;\n    console.log(idNames);\n    let submitIdName = props.submitIdName;\n    let displayNames = props.displayNames;\n    let position = props.position;\n    const [playerPercentages, setPlayerPercentages] = useState([]);\n\n    useEffect(() => {\n        console.log(\"Values changed\", props.idNames);\n        getDataOnLoad();\n    }, [props.idNames]);\n    \n    async function getDataOnLoad() {\n        let response = await mongodbRetrieve(playerClass, idNames);\n        setPlayerPercentages(response.data.data.playerData.percentages);\n    }\n\n    function playerClick(button) {\n        if (button.classList.contains('active')) {\n            button.classList.remove('active');\n        } else {\n            button.classList.add('active');\n        }\n    }\n\n    async function submitClick() {\n        let buttons = [];\n        let activeButtonIds = [];\n        buttons = document.getElementsByClassName(playerClass);\n\n        for(let i = 0; i < buttons.length; i++) {\n            if (buttons[i].classList.contains('active')) {\n                activeButtonIds.push(buttons[i].id);\n                buttons[i].classList.remove('active');\n            }\n        }\n        // console.log(idNames);\n        // console.log('Hi 1111');\n        await mongodbUpdate(activeButtonIds, playerClass);\n        setTimeout(async function() {\n            let response = await mongodbRetrieve(playerClass, idNames);\n            // console.log('Hi 3333');\n            // console.log(response);\n            setPlayerPercentages(response.data.data.playerData.percentages);\n        }, 150);\n        // console.log(idNames);\n        // let response = await mongodbRetrieve(playerClass, idNames);\n        // console.log('Hi 3333');\n        //     // console.log(response);\n        // setPlayerPercentages(response.data.data.playerData.percentages);\n    }\n\n    console.log(playerPercentages);\n\n    let dataset = [{\n        axis: 'y',\n        label: '',\n        data: playerPercentages,\n        backgroundColor: props.bgColors,\n        borderColor: props.colors,\n        borderWidth: 2\n    }]\n\n    let options = {\n        indexAxis: 'y',\n        plugins: {\n            legend: {\n                display: false,\n            },\n            tooltip: {\n                callbacks: {\n                    label: function(context) {\n                        let label = context.parsed.x + '% of Community';\n                        return label;\n                    }\n                }\n            }\n        },\n        scales: {\n            x: {\n                title: {\n                    display: false,\n                    text: `% of Community that Deems ${position} as Valuable`,\n                    padding: 20,\n                    color: 'rgb(255, 255, 255)',\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 20\n                    }\n                },\n                ticks: {\n                    callback: function(value) {\n                        return value + '%';\n                    },\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 15\n                    }\n                },\n                grid: {\n                    color: 'rgba(101,101,101, 0.1)'\n                },\n                position: \"top\"\n                \n            },\n            y: {\n                title: {\n                    display: false\n                },\n                ticks: {\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 15\n                    }\n                },\n                grid: {\n                    color: \"rgba(101,101,101, 0.1)\"\n                }\n            }\n        },\n        maintainAspectRatio: false\n    }\n\n    const data = {\n        labels: displayNames,\n        datasets: dataset\n    }\n\n    return (\n        <div className=\"poll-section\">\n            <h2 className=\"poll-title\">F1 Community on {position}s' Value</h2>\n            <div className=\"poll\"> \n                <h3 className=\"poll-question\">Which {position}s currently have the best value?</h3>\n                <form className=\"form\">\n                    <button id={idNames[0]} className={`custom-btn first-btn ${playerClass}`} type=\"button\" value={idNames[0]} onClick={() => playerClick(document.getElementById(idNames[0]))}>{displayNames[0]}</button>\n                    {(displayNames.slice(1, displayNames.length - 1)).map((name, index) => (\n                        <button id={idNames[index + 1]} className={`custom-btn ${playerClass}`} type=\"button\" value={name} onClick={() => playerClick(document.getElementById(idNames[index + 1]))}>{name}</button>\n                    ))}\n                    <button id={idNames[idNames.length - 1]} className={`custom-btn last-btn ${playerClass}`} type=\"button\" value={idNames[idNames.length - 1]} onClick={() => playerClick(document.getElementById(idNames[idNames.length - 1]))}>{displayNames[idNames.length - 1]}</button>\n                </form>\n                <button id={submitIdName} className=\"submit-btn\" type=\"submit\" onClick={submitClick}>Submit</button>\n            </div>\n            <div id={position} className=\"results\">\n                <h3 className=\"results-axis\">% of Community that Deems Each {position} as Valuable</h3>\n                <Bar data={data} options={options} />\n                <br></br>\n            </div>\n        </div>\n    )\n}\n\nexport default Poll;"]},"metadata":{},"sourceType":"module"}