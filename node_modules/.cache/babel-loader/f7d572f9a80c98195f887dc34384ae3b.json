{"ast":null,"code":"var _jsxFileName = \"/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/frontend/src/components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport Poll from './Poll';\nimport fantasyapiRetrieve from '../services/fantasyapiRetrieve';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart() {\n  _s();\n\n  const [weeks, setWeeks] = useState([]);\n  const [drNames, setDrNames] = useState([]);\n  const [drLNames, setDrLNames] = useState([]);\n  const [drPriceHistories, setDrPriceHistories] = useState([]);\n  const [drColors, setDrColors] = useState([]);\n  const [drBgColors, setDrBgColors] = useState([]);\n  const [drDashes, setDrDashes] = useState([]);\n  const [crNames, setCrNames] = useState([]);\n  const [crPriceHistories, setCrPriceHistories] = useState([]);\n  const [crColors, setCrColors] = useState([]);\n  const [crBgColors, setCrBgColors] = useState([]);\n  const [crTeamAbbr, setCrTeamAbbr] = useState([]);\n\n  async function getApiData() {\n    const response = await fantasyapiRetrieve();\n    setWeeks(response.data.weeks);\n    setDrNames(response.data.drNames);\n    setDrLNames(response.data.drLNames);\n    setDrPriceHistories(response.data.drPriceHistories);\n    setDrColors(response.data.drColors);\n    setDrBgColors(response.data.drBgColors);\n    setDrDashes(response.data.drDashes);\n    setCrNames(response.data.crNames);\n    setCrPriceHistories(response.data.crPriceHistories);\n    setCrColors(response.data.crColors);\n    setCrBgColors(response.data.crBgColors);\n    setCrTeamAbbr(response.data.crTeamAbbr);\n  }\n\n  useEffect(() => {\n    getApiData();\n  }, []);\n  const drPollData = [95, 90, 85, 80, 75, 70, 65, 60, 50, 55, 45, 40, 35, 25, 30, 25, 20, 15, 10, 5];\n  const crPollData = [95, 50, 80, 75, 45, 40, 35, 30, 10, 5];\n  let drDatasets = [];\n\n  for (let i = 0; i < drNames.length; i++) {\n    drDatasets.push({\n      label: drNames[i],\n      data: drPriceHistories[i],\n      backgroundColor: drBgColors[i],\n      borderColor: drColors[i],\n      borderDash: drDashes[i],\n      borderWidth: 1.5,\n      pointBackgroundColor: drColors[i]\n    });\n  }\n\n  let drOptions = {\n    plugins: {\n      title: {\n        display: true,\n        fullSize: false,\n        padding: 30,\n        text: \"Drivers' Price Per Round\",\n        color: \"rgb(0, 0, 0)\",\n        font: {\n          family: \"'Titillium Web', sans-serif\",\n          weight: \"700\",\n          size: 30\n        }\n      },\n      legend: {\n        display: true,\n        fullSize: false,\n        title: {\n          display: true,\n          text: \"Drivers (Most to Least Fantasy Points)\",\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            style: \"italic\",\n            size: 20\n          }\n        },\n        labels: {\n          boxWidth: 12,\n          boxHeight: 12,\n          padding: 20,\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\"\n          }\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title: function (context) {\n            return \"Round \" + context[0].label;\n          },\n          label: function (context) {\n            let label = context.dataset.label + \": \";\n            label += '$' + context.parsed.y + \" M\";\n            return label;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Rounds\",\n          padding: 20,\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 20\n          }\n        },\n        ticks: {\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 15\n          }\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Price (Millions of $)\",\n          padding: 20,\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 20\n          }\n        },\n        ticks: {\n          callback: function (value) {\n            return '$' + value;\n          },\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 15\n          }\n        },\n        min: 0,\n        max: 35\n      }\n    },\n    aspectRatio: 1.5\n  };\n  const drData = {\n    labels: weeks,\n    datasets: drDatasets\n  };\n  let crDatasets = [];\n\n  for (let i = 0; i < crNames.length; i++) {\n    crDatasets.push({\n      label: crNames[i],\n      data: crPriceHistories[i],\n      backgroundColor: crBgColors[i],\n      borderColor: crColors[i],\n      borderWidth: 1.5,\n      pointBackgroundColor: crColors[i]\n    });\n  }\n\n  let crOptions = {\n    plugins: {\n      title: {\n        display: true,\n        fullSize: false,\n        padding: 30,\n        text: \"Constructors' Price Per Round\",\n        color: \"rgb(0, 0, 0)\",\n        font: {\n          family: \"'Titillium Web', sans-serif\",\n          weight: \"700\",\n          size: 30\n        }\n      },\n      legend: {\n        display: true,\n        fullSize: false,\n        title: {\n          display: true,\n          text: \"Constructors (Most to Least Fantasy Points)\",\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            style: \"italic\",\n            size: 20\n          }\n        },\n        labels: {\n          boxWidth: 12,\n          boxHeight: 12,\n          padding: 20\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title: function (context) {\n            return \"Round \" + context[0].label;\n          },\n          label: function (context) {\n            let label = context.dataset.label + \": \";\n            label += '$' + context.parsed.y + \" M\";\n            return label;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Rounds\",\n          padding: 20,\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 20\n          }\n        },\n        ticks: {\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 15\n          }\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Price (Millions of $)\",\n          padding: 20,\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 20\n          }\n        },\n        ticks: {\n          callback: function (value) {\n            return '$' + value;\n          },\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 15\n          }\n        },\n        min: 0,\n        max: 40\n      }\n    },\n    aspectRatio: 1.5\n  };\n  const crData = {\n    labels: weeks,\n    datasets: crDatasets\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: drData,\n        options: drOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Poll, {\n      data: drPollData,\n      idNames: drLNames,\n      classNames: \"driver\",\n      submitIdName: \"submit-drivers\",\n      displayNames: drNames,\n      colors: drColors,\n      bgColors: drBgColors,\n      position: \"Driver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: crData,\n        options: crOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Poll, {\n      data: crPollData,\n      idNames: crTeamAbbr,\n      classNames: \"constructor\",\n      submitIdName: \"submit-contructors\",\n      displayNames: crNames,\n      colors: crColors,\n      bgColors: crBgColors,\n      position: \"Constructor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"ExjMmWVwrQYcN6D6hsOZZ2cVez8=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/frontend/src/components/Chart.js"],"names":["React","useEffect","useState","Line","axios","Poll","fantasyapiRetrieve","Chart","weeks","setWeeks","drNames","setDrNames","drLNames","setDrLNames","drPriceHistories","setDrPriceHistories","drColors","setDrColors","drBgColors","setDrBgColors","drDashes","setDrDashes","crNames","setCrNames","crPriceHistories","setCrPriceHistories","crColors","setCrColors","crBgColors","setCrBgColors","crTeamAbbr","setCrTeamAbbr","getApiData","response","data","drPollData","crPollData","drDatasets","i","length","push","label","backgroundColor","borderColor","borderDash","borderWidth","pointBackgroundColor","drOptions","plugins","title","display","fullSize","padding","text","color","font","family","weight","size","legend","style","labels","boxWidth","boxHeight","tooltip","callbacks","context","dataset","parsed","y","scales","x","ticks","callback","value","min","max","aspectRatio","drData","datasets","crDatasets","crOptions","crData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\n\nimport Poll from './Poll';\nimport fantasyapiRetrieve from '../services/fantasyapiRetrieve';\n\nfunction Chart() {\n    const [weeks, setWeeks] = useState([]);\n    const [drNames, setDrNames] = useState([]);\n    const [drLNames, setDrLNames] = useState([]);\n    const [drPriceHistories, setDrPriceHistories] = useState([]);\n    const [drColors, setDrColors] = useState([]);\n    const [drBgColors, setDrBgColors] = useState([]);\n    const [drDashes, setDrDashes] = useState([]);\n    const [crNames, setCrNames] = useState([]);\n    const [crPriceHistories, setCrPriceHistories] = useState([]);\n    const [crColors, setCrColors] = useState([]);\n    const [crBgColors, setCrBgColors] = useState([]);\n    const [crTeamAbbr, setCrTeamAbbr] = useState([]);\n\n    async function getApiData() {\n        const response = await fantasyapiRetrieve();\n        setWeeks(response.data.weeks);\n        setDrNames(response.data.drNames);\n        setDrLNames(response.data.drLNames);\n        setDrPriceHistories(response.data.drPriceHistories);\n        setDrColors(response.data.drColors);\n        setDrBgColors(response.data.drBgColors);\n        setDrDashes(response.data.drDashes);\n        setCrNames(response.data.crNames);\n        setCrPriceHistories(response.data.crPriceHistories);\n        setCrColors(response.data.crColors);\n        setCrBgColors(response.data.crBgColors);\n        setCrTeamAbbr(response.data.crTeamAbbr);\n    }\n\n    useEffect(() => {\n        getApiData();\n    }, []);\n\n    const drPollData = [95, 90, 85, 80, 75, 70, 65, 60, 50, 55, 45, 40, 35, 25, 30, 25, 20, 15, 10, 5];\n    const crPollData = [95, 50, 80, 75, 45, 40, 35, 30, 10, 5];\n\n\n    let drDatasets = []\n    for(let i = 0; i < drNames.length; i++) {\n        drDatasets.push({\n            label: drNames[i],\n            data: drPriceHistories[i],\n            backgroundColor: drBgColors[i],\n            borderColor: drColors[i],\n            borderDash: drDashes[i], \n            borderWidth: 1.5,\n            pointBackgroundColor: drColors[i]\n        });\n    }\n\n    let drOptions = {\n        plugins: {\n            title: {\n                display: true,\n                fullSize: false,\n                padding: 30,\n                text: \"Drivers' Price Per Round\",\n                color: \"rgb(0, 0, 0)\",\n                font: {\n                    family: \"'Titillium Web', sans-serif\",\n                    weight: \"700\",\n                    size: 30\n                }\n            },\n            legend: {\n                display: true,\n                fullSize: false,\n                title: {\n                    display: true,\n                    text: \"Drivers (Most to Least Fantasy Points)\",\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        style: \"italic\",\n                        size: 20\n                    }\n                },\n                labels: {\n                    boxWidth: 12,\n                    boxHeight: 12,\n                    padding: 20,\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                    }\n                }\n            },\n            tooltip: {\n                callbacks: {\n                    title: function(context) { \n                        return \"Round \" + context[0].label;\n                    },\n                    label: function(context) {\n                        let label = context.dataset.label + \": \";\n                        label += ('$' + context.parsed.y + \" M\");\n                        return label;\n                    }\n                }\n            }\n        },\n        scales: {\n            x: {\n                title: {\n                    display: true,\n                    text: \"Rounds\",\n                    padding: 20,\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 20\n                    }\n                },\n                ticks: {\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 15\n                    }\n                }\n            },\n            y: {\n                title: {\n                    display: true,\n                    text: \"Price (Millions of $)\",\n                    padding: 20,\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 20\n                    }\n                },\n                ticks: {\n                    callback: function(value) {\n                        return '$' + value;\n                    },\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 15\n                    }\n                },\n                min: 0,\n                max: 35\n            }\n        },\n        aspectRatio: 1.5\n    }\n\n    const drData = {\n        labels: weeks,\n        datasets: drDatasets\n    };\n\n    let crDatasets = []\n    for(let i = 0; i < crNames.length; i++) {\n        crDatasets.push({\n            label: crNames[i],\n            data: crPriceHistories[i],\n            backgroundColor: crBgColors[i],\n            borderColor: crColors[i],\n            borderWidth: 1.5,\n            pointBackgroundColor: crColors[i]\n        });\n    }\n\n    let crOptions = {\n        plugins: {\n            title: {\n                display: true,\n                fullSize: false,\n                padding: 30,\n                text: \"Constructors' Price Per Round\",\n                color: \"rgb(0, 0, 0)\",\n                font: {\n                    family: \"'Titillium Web', sans-serif\",\n                    weight: \"700\",\n                    size: 30\n                }\n            },\n            legend: {\n                display: true,\n                fullSize: false,\n                title: {\n                    display: true,\n                    text: \"Constructors (Most to Least Fantasy Points)\",\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        style: \"italic\",\n                        size: 20\n                    }\n                },\n                labels: {\n                    boxWidth: 12,\n                    boxHeight: 12,\n                    padding: 20,\n                }\n            },\n            tooltip: {\n                callbacks: {\n                    title: function(context) { \n                        return \"Round \" + context[0].label;\n                    },\n                    label: function(context) {\n                        let label = context.dataset.label + \": \";\n                        label += ('$' + context.parsed.y + \" M\");\n                        return label;\n                    }\n                }\n            }\n        },\n        scales: {\n            x: {\n                title: {\n                    display: true,\n                    text: \"Rounds\",\n                    padding: 20,\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 20\n                    }\n                },\n                ticks: {\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 15\n                    }\n                }\n            },\n            y: {\n                title: {\n                    display: true,\n                    text: \"Price (Millions of $)\",\n                    padding: 20,\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 20\n                    }\n                },\n                ticks: {\n                    callback: function(value) {\n                        return '$' + value;\n                    },\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 15\n                    }\n                },\n                min: 0,\n                max: 40\n            }\n        },\n        aspectRatio: 1.5\n    }\n\n    const crData = {\n        labels: weeks,\n        datasets: crDatasets\n    }\n\n    return (\n        <div>\n            <div className=\"chart\"> \n                <Line data={drData} options={drOptions} />\n            </div>\n            <Poll \n                data={drPollData}\n                idNames={drLNames}\n                classNames={\"driver\"} \n                submitIdName={\"submit-drivers\"}\n                displayNames={drNames} \n                colors={drColors} \n                bgColors={drBgColors} \n                position={\"Driver\"} \n            />\n            <div className=\"chart\">\n                <Line data={crData} options={crOptions} />\n            </div>\n            <Poll\n                data={crPollData}\n                idNames={crTeamAbbr}\n                classNames={\"constructor\"}\n                submitIdName={\"submit-contructors\"} \n                displayNames={crNames} \n                colors={crColors} \n                bgColors={crBgColors} \n                position={\"Constructor\"} \n            />\n        </div>\n    );\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}