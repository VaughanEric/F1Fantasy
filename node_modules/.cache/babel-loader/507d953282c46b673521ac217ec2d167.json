{"ast":null,"code":"var _jsxFileName = \"/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/src/components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart() {\n  _s();\n\n  const [weeks, setWeeks] = useState([]);\n  const [drNames, setDrNames] = useState([]);\n  const [drPriceHistories, setDrPriceHistories] = useState([]);\n  const [crNames, setCrNames] = useState([]);\n  const [crPriceHistories, setCrPriceHistories] = useState([]); // const [drColors, setDrColors] = useState([]);\n  // const [drDashes, setDrDashes] = useState([]);\n  // const [crColors, setCrColors] = useState([]);\n\n  useEffect(() => {\n    let weeksTemp = [];\n    let drNamesTemp = [];\n    let drPriceHistoriesTemp = [];\n    let crNamesTemp = [];\n    let crPriceHistoriesTemp = []; // let drColorsTemp = [];\n    // let drDashesTemp = [];\n    // let crColorsTemp = [];\n    // let aflaRomeo = 0;\n    // let alpine = 0;\n    // let alphaTauri = 0;\n    // let astonMartin = 0;\n    // let haas = 0;\n    // let ferrari = 0;\n    // let mclaren = 0;\n    // let mercedes = 0;\n    // let redBull = 0;\n    // let williams = 0;\n\n    axios.get(\"https://fantasy-api.formula1.com/partner_games/f1/players#\").then(res => {\n      console.log(res);\n\n      for (let i = 0; i < res.data.players.length; i++) {\n        let player = res.data.players[i];\n\n        if (player.position === \"Driver\") {\n          drNamesTemp.push(player.display_name); // switch(res.data) {\n          //     case \"L. Hamilton\"\n          // }\n        } else {\n          crNamesTemp.push(player.display_name);\n        }\n\n        let seasonPrices = [];\n\n        for (let j = 0; j < player.season_prices.length; j++) {\n          seasonPrices.push(parseFloat(player.season_prices[j].price));\n        }\n\n        if (player.position === \"Driver\") {\n          drPriceHistoriesTemp.push(seasonPrices);\n        } else {\n          crPriceHistoriesTemp.push(seasonPrices);\n        }\n      }\n\n      let numberOfWeeks = drPriceHistoriesTemp[0].length;\n\n      for (let i = 1; i <= numberOfWeeks; i++) {\n        weeksTemp.push(i);\n      }\n\n      setWeeks(weeksTemp);\n      setDrNames(drNamesTemp);\n      setDrPriceHistories(drPriceHistoriesTemp);\n      setCrNames(crNamesTemp);\n      setCrPriceHistories(crPriceHistoriesTemp);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  console.log(weeks, weeks.length);\n  console.log(drNames, drNames.length);\n  console.log(drPriceHistories, drPriceHistories.length);\n  console.log(crNames, crNames.length);\n  console.log(crPriceHistories, crPriceHistories.length);\n  const data = {\n    labels: weeks,\n    datasets: [{\n      label: drNames[0],\n      data: drPriceHistories[0],\n      fill: false,\n      backgroundColor: \"rgb(255, 99, 132)\",\n      borderColor: \"rgba(255, 99, 132, 0.2)\",\n      borderDash: [0]\n    }]\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          maxTicksLimit: 5\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"F1 Fantasy Prices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"o3K0taoG0i5EhgQ+EsMLpimABTA=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/src/components/Chart.js"],"names":["React","useEffect","useState","Line","axios","Chart","weeks","setWeeks","drNames","setDrNames","drPriceHistories","setDrPriceHistories","crNames","setCrNames","crPriceHistories","setCrPriceHistories","weeksTemp","drNamesTemp","drPriceHistoriesTemp","crNamesTemp","crPriceHistoriesTemp","get","then","res","console","log","i","data","players","length","player","position","push","display_name","seasonPrices","j","season_prices","parseFloat","price","numberOfWeeks","catch","err","labels","datasets","label","fill","backgroundColor","borderColor","borderDash","options","scales","yAxes","ticks","beginAtZero","maxTicksLimit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\"\n\nfunction Chart() {\n    const [weeks, setWeeks] = useState([]);\n    const [drNames, setDrNames] = useState([]);\n    const [drPriceHistories, setDrPriceHistories] = useState([]);\n    const [crNames, setCrNames] = useState([]);\n    const [crPriceHistories, setCrPriceHistories] = useState([]);\n    // const [drColors, setDrColors] = useState([]);\n    // const [drDashes, setDrDashes] = useState([]);\n    // const [crColors, setCrColors] = useState([]);\n\n    useEffect(() => {\n        let weeksTemp = [];\n        let drNamesTemp = [];\n        let drPriceHistoriesTemp = [];\n        let crNamesTemp = [];\n        let crPriceHistoriesTemp = [];\n        // let drColorsTemp = [];\n        // let drDashesTemp = [];\n        // let crColorsTemp = [];\n        // let aflaRomeo = 0;\n        // let alpine = 0;\n        // let alphaTauri = 0;\n        // let astonMartin = 0;\n        // let haas = 0;\n        // let ferrari = 0;\n        // let mclaren = 0;\n        // let mercedes = 0;\n        // let redBull = 0;\n        // let williams = 0;\n\n        axios\n            .get(\"https://fantasy-api.formula1.com/partner_games/f1/players#\")\n            .then(res => {\n                console.log(res);\n                    \n                for(let i = 0; i < res.data.players.length; i++) {\n                    let player = res.data.players[i];\n\n                    if(player.position === \"Driver\") {\n                        drNamesTemp.push(player.display_name);\n\n                        // switch(res.data) {\n                        //     case \"L. Hamilton\"\n                        // }\n                    } else {\n                        crNamesTemp.push(player.display_name);\n                    }\n\n                    let seasonPrices = [];\n                    for(let j = 0; j < player.season_prices.length; j++) {\n                        seasonPrices.push(parseFloat(player.season_prices[j].price));\n                    }\n                    if(player.position === \"Driver\") {\n                        drPriceHistoriesTemp.push(seasonPrices);\n                    } else {\n                        crPriceHistoriesTemp.push(seasonPrices);\n                    }\n                }\n\n                let numberOfWeeks = drPriceHistoriesTemp[0].length;\n                for(let i = 1; i <= numberOfWeeks; i++) {\n                    weeksTemp.push(i);\n                }\n\n                setWeeks(weeksTemp);\n                setDrNames(drNamesTemp);\n                setDrPriceHistories(drPriceHistoriesTemp);\n                setCrNames(crNamesTemp);\n                setCrPriceHistories(crPriceHistoriesTemp);\n            })\n            .catch(err => {\n                console.log(err);\n            }) \n    }, []);\n\n    console.log(weeks, weeks.length);\n    console.log(drNames, drNames.length);\n    console.log(drPriceHistories, drPriceHistories.length);\n    console.log(crNames, crNames.length);\n    console.log(crPriceHistories, crPriceHistories.length);\n\n    const data = {\n        labels: weeks,\n        datasets: [\n            {\n                label: drNames[0],\n                data: drPriceHistories[0],\n                fill: false,\n                backgroundColor: \"rgb(255, 99, 132)\",\n                borderColor: \"rgba(255, 99, 132, 0.2)\",\n                borderDash: [0]\n            }\n        ]\n    };\n\n    const options = {\n        scales: { \n            yAxes: [\n                { \n                    ticks: {\n                        beginAtZero: true,\n                        maxTicksLimit: 5\n                    }\n                }\n            ]\n        }\n    }\n\n    return (\n        <div>\n            <h1>F1 Fantasy Prices</h1>\n            <Line data={data} options={options} />\n        </div>\n    );\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}