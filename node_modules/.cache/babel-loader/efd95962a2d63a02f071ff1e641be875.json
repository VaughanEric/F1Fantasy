{"ast":null,"code":"var _jsxFileName = \"/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/src/components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart() {\n  _s();\n\n  const [weeks, setWeeks] = useState([]);\n  const [driverNames, setDriverNames] = useState([]);\n  const [driverPriceHistories, setDriverPriceHistories] = useState([]);\n  const [constructorNames, setConstructorsNames] = useState([]);\n  const [constructorPriceHistories, setConstructorsPriceHistories] = useState([]);\n  axios.get(\"https://fantasy-api.formula1.com/partner_games/f1/players#\").then(res => {\n    console.log(res);\n\n    for (let i = 0; i < res.data.players.length; i++) {\n      if (res.data.players[i].position == \"Driver\") {\n        setDriverNames(driverNames.push(res.data.players[i].display_name));\n      } else {\n        setConstructorsNames(constructorNames.push(res.data.players[i].display_name));\n      }\n\n      let seasonPrices = [];\n\n      for (let j = 0; j < res.data.players[i].season_prices.length; j++) {\n        seasonPrices.push(parseFloat(res.data.players[i].season_prices[j].price));\n      }\n\n      if (res.data.players[i].position == \"Driver\") {\n        setDriverPriceHistories(driverPriceHistories.push(seasonPrices));\n      } else {\n        setConstructorsPriceHistories(constructorPriceHistories.push(seasonPrices));\n      }\n    }\n\n    let numberOfWeeks = driverPriceHistories[0].length;\n\n    for (let i = 1; i <= numberOfWeeks; i++) {\n      setWeeks(weeks.push(i));\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n  console.log(weeks, driverNames, driverPriceHistories, constructorNames, constructorPriceHistories);\n  const data = {\n    labels: weeks,\n    datasets: [{\n      label: driverNames[0],\n      data: driverPriceHistories[0],\n      fill: false,\n      backgroundColor: \"rgb(255, 99, 132)\",\n      borderColor: \"rgba(255, 99, 132, 0.2)\"\n    }]\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          maxTicksLimit: 5\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"F1 Fantasy Prices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"aoV9gw6lynGMla85WVZJKtz+kc8=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/src/components/Chart.js"],"names":["React","useState","Line","axios","Chart","weeks","setWeeks","driverNames","setDriverNames","driverPriceHistories","setDriverPriceHistories","constructorNames","setConstructorsNames","constructorPriceHistories","setConstructorsPriceHistories","get","then","res","console","log","i","data","players","length","position","push","display_name","seasonPrices","j","season_prices","parseFloat","price","numberOfWeeks","catch","err","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","maxTicksLimit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\"\n\nfunction Chart() {\n    const [weeks, setWeeks] = useState([])\n    const [driverNames, setDriverNames] = useState([])\n    const [driverPriceHistories, setDriverPriceHistories] = useState([])\n    const [constructorNames, setConstructorsNames] = useState([])\n    const [constructorPriceHistories, setConstructorsPriceHistories] = useState([])\n\n    axios\n        .get(\"https://fantasy-api.formula1.com/partner_games/f1/players#\")\n        .then(res => {\n            console.log(res);\n\n            for(let i = 0; i < res.data.players.length; i++) {\n                if(res.data.players[i].position == \"Driver\") {\n                    setDriverNames(driverNames.push(res.data.players[i].display_name));\n                } else {\n                    setConstructorsNames(constructorNames.push(res.data.players[i].display_name));\n                }\n\n                let seasonPrices = [];\n                for(let j = 0; j < res.data.players[i].season_prices.length; j++) {\n                    seasonPrices.push(parseFloat(res.data.players[i].season_prices[j].price));\n                }\n                if(res.data.players[i].position == \"Driver\") {\n                    setDriverPriceHistories(driverPriceHistories.push(seasonPrices));\n                } else {\n                    setConstructorsPriceHistories(constructorPriceHistories.push(seasonPrices));\n                }\n            }\n\n            let numberOfWeeks = driverPriceHistories[0].length;\n            for(let i = 1; i <= numberOfWeeks; i++) {\n                setWeeks(weeks.push(i));\n            }        \n        })\n        .catch(err => {\n            console.log(err);\n        })\n\n        console.log(weeks, driverNames, driverPriceHistories, constructorNames, constructorPriceHistories);\n\n    const data = {\n        labels: weeks,\n        datasets: [\n            {\n                label: driverNames[0],\n                data: driverPriceHistories[0],\n                fill: false,\n                backgroundColor: \"rgb(255, 99, 132)\",\n                borderColor: \"rgba(255, 99, 132, 0.2)\"\n            }\n        ]\n    };\n\n    const options = {\n        scales: { \n            yAxes: [\n                { \n                    ticks: {\n                        beginAtZero: true,\n                        maxTicksLimit: 5\n                    }\n                }\n            ]\n        }\n    }\n\n    return (\n        <div>\n            <h1>F1 Fantasy Prices</h1>\n            <Line data={data} options={options} />\n        </div>\n    );\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}