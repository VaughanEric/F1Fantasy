{"ast":null,"code":"var _jsxFileName = \"/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/src/components/DrPoll.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DrPoll(props) {\n  let lastNames = [];\n\n  for (let i = 0; i < props.drivers.length; i++) {\n    lastNames.push(props.drivers[i].slice(3));\n  }\n\n  function click(button) {\n    if (button.classList.contains(\"active\")) {\n      button.classList.remove(\"active\");\n    } else {\n      button.classList.add(\"active\");\n    }\n  }\n\n  let dataset = [];\n\n  for (let i = 0; i < props.drivers.length; i++) {\n    dataset.push({\n      label: \"Community Value Percent\",\n      data: (i * 5 - 100) * -1,\n      backgroundColor: props.bgColors[i],\n      borderColor: props.color[i],\n      borderWidth: 1.5\n    });\n  }\n\n  let options = {\n    indexAxis: y,\n    plugins: {\n      title: {\n        display: true,\n        fullSize: false,\n        padding: 30,\n        text: \"Community's View on the Drivers' Value\",\n        color: \"rgb(0, 0, 0)\",\n        font: {\n          family: \"'Titillium Web', sans-serif\",\n          weight: \"700\",\n          size: 30\n        }\n      }\n    },\n    legend: {\n      display: false\n    },\n    tooltip: {\n      label: function (context) {\n        let label = context.dataset.label + \": \";\n        label += context.parsed.y + \"%\";\n        return label;\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: false\n        },\n        ticks: {\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 15\n          }\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"% of Community that Deems Driver as Valuable\",\n          padding: 20,\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 20\n          }\n        },\n        ticks: {\n          callback: function (value) {\n            return value + '%';\n          },\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 15\n          }\n        },\n        min: 0,\n        max: 100\n      }\n    }\n  };\n  const data = {\n    labels: props.drivers,\n    datasets: dataset\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dr-poll\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"dr-poll-title\",\n        children: \"Which drivers currently have the best value?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"dr-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: lastNames[0],\n          className: \"custom-btn first-btn\",\n          type: \"button\",\n          value: props.drivers[0],\n          onClick: () => click(document.getElementById(lastNames[0])),\n          children: props.drivers[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), props.drivers.slice(1, props.drivers.length - 1).map((name, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          id: lastNames[index + 1],\n          className: \"custom-btn\",\n          type: \"button\",\n          value: name,\n          onClick: () => click(document.getElementById(lastNames[index + 1])),\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: lastNames[19],\n          className: \"custom-btn last-btn\",\n          type: \"button\",\n          value: props.drivers[19],\n          onClick: () => click(document.getElementById(lastNames[19])),\n          children: props.drivers[19]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dr-results\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_c = DrPoll;\nexport default DrPoll;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrPoll\");","map":{"version":3,"sources":["/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/src/components/DrPoll.js"],"names":["React","Bar","DrPoll","props","lastNames","i","drivers","length","push","slice","click","button","classList","contains","remove","add","dataset","label","data","backgroundColor","bgColors","borderColor","color","borderWidth","options","indexAxis","y","plugins","title","display","fullSize","padding","text","font","family","weight","size","legend","tooltip","context","parsed","scales","x","ticks","callback","value","min","max","labels","datasets","document","getElementById","map","name","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\n\nfunction DrPoll(props) {\n    let lastNames = [];\n    for (let i = 0; i < props.drivers.length; i++) {\n        lastNames.push(props.drivers[i].slice(3));\n    }\n\n    function click(button) {\n        if (button.classList.contains(\"active\")) {\n            button.classList.remove(\"active\");\n        } else {\n            button.classList.add(\"active\");\n        }\n    }\n\n    let dataset = []\n    for(let i = 0; i < props.drivers.length; i++) {\n        dataset.push({\n            label: \"Community Value Percent\",\n            data: (((i * 5) - 100) * -1),\n            backgroundColor: props.bgColors[i],\n            borderColor: props.color[i],\n            borderWidth: 1.5,\n        })\n    }\n\n    let options = {\n        indexAxis: y,\n        plugins: {\n            title: {\n                display: true,\n                fullSize: false,\n                padding: 30,\n                text: \"Community's View on the Drivers' Value\",\n                color: \"rgb(0, 0, 0)\",\n                font: {\n                    family: \"'Titillium Web', sans-serif\",\n                    weight: \"700\",\n                    size: 30\n                }\n            }\n        },\n        legend: {\n            display: false \n        },\n        tooltip: {\n            label: function(context) {\n                let label = context.dataset.label + \": \";\n                label += (context.parsed.y + \"%\");\n                return label;\n            }\n        },\n        scales: {\n            x: {\n                title: {\n                    display: false\n                },\n                ticks: {\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 15\n                    }\n                }\n            },\n            y: {\n                title: {\n                    display: true,\n                    text: \"% of Community that Deems Driver as Valuable\",\n                    padding: 20,\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 20\n                    }\n                },\n                ticks: {\n                    callback: function(value) {\n                        return value + '%';\n                    },\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 15\n                    }\n                },\n                min: 0,\n                max: 100\n            }\n        }\n    }\n\n    const data = {\n        labels: props.drivers,\n        datasets: dataset\n    }\n\n    return (\n        <div className=\"poll-section\">\n            <div className=\"dr-poll\">\n                <h3 className=\"dr-poll-title\">Which drivers currently have the best value?</h3>\n                <form className=\"dr-form\">\n                    <button id={lastNames[0]} className=\"custom-btn first-btn\" type=\"button\" value={props.drivers[0]} onClick={() => click(document.getElementById(lastNames[0]))}>{props.drivers[0]}</button>\n                    {(props.drivers.slice(1, props.drivers.length - 1)).map((name, index) => (\n                        <button id={lastNames[index + 1]} className=\"custom-btn\" type=\"button\" value={name} onClick={() => click(document.getElementById(lastNames[index + 1]))}>{name}</button>\n                    ))}\n                    <button id={lastNames[19]} className=\"custom-btn last-btn\" type=\"button\" value={props.drivers[19]} onClick={() => click(document.getElementById(lastNames[19]))}>{props.drivers[19]}</button>\n                </form>\n                <button type=\"submit\" className=\"submit-btn\">Submit</button>\n            </div>\n            <div className=\"dr-results\">\n                <Bar data={data} options={options} />\n            </div>\n        </div>\n    )\n}\n\nexport default DrPoll;"]},"metadata":{},"sourceType":"module"}