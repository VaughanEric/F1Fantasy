{"ast":null,"code":"var _jsxFileName = \"/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/src/components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { registerables } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart() {\n  _s();\n\n  function quickSort(arr, left, right) {\n    let pivot, partitionIndex;\n\n    if (left < right) {\n      pivot = right;\n      partitionIndex = partition(arr, pivot, left, right);\n      quickSort(arr, left, partitionIndex - 1);\n      quickSort(arr, partition + 1, right);\n    }\n\n    return arr;\n  }\n\n  function partition(arr, pivot, left, right) {\n    let pivotValue = arr[pivot].team_abbreviation;\n    let partitionIndex = left;\n\n    for (let i = left; i < right; i++) {\n      if (arr[i].team_abbreviation < pivotValue) {\n        swap(arr, i, partitionIndex);\n        partitionIndex++;\n      }\n    }\n\n    swap(arr, right, partitionIndex);\n    console.log(arr);\n    return partitionIndex;\n  }\n\n  function swap(arr, i, j) {\n    let temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n\n  const [weeks, setWeeks] = useState([]);\n  const [drNames, setDrNames] = useState([]);\n  const [drPriceHistories, setDrPriceHistories] = useState([]);\n  const [crNames, setCrNames] = useState([]);\n  const [crPriceHistories, setCrPriceHistories] = useState([]);\n  const [drColors, setDrColors] = useState([]);\n  const [drDashes, setDrDashes] = useState([]);\n  const [crColors, setCrColors] = useState([]);\n  let alf = 0;\n  let alp = 0;\n  let alt = 0;\n  let ast = 0;\n  let haa = 0;\n  let fer = 0;\n  let mcl = 0;\n  let mer = 0;\n  let red = 0;\n  let wil = 0;\n  useEffect(() => {\n    let players = [];\n    let weeksTemp = [];\n    let drNamesTemp = [];\n    let drPriceHistoriesTemp = [];\n    let crNamesTemp = [];\n    let crPriceHistoriesTemp = [];\n    let drColorsTemp = [];\n    let drDashesTemp = [];\n    let crColorsTemp = [];\n    axios.get(\"https://fantasy-api.formula1.com/partner_games/f1/players#\").then(res => {\n      console.log(res);\n\n      for (let i = 0; i < res.data.players.length; i++) {\n        players.push(res.data.players[i]);\n      }\n\n      quickSort(players, 0, players.length - 1);\n      console.log(players);\n\n      for (let i = 0; i < res.data.players.length; i++) {\n        let player = res.data.players[i];\n\n        if (player.position === \"Driver\") {\n          drNamesTemp.push(player.display_name);\n\n          switch (player.team_abbreviation) {\n            case \"ALF\":\n              drColorsTemp.push(\"rgb(144, 0, 0)\");\n\n              if (alf === 0) {\n                drDashesTemp.push([]);\n                alf++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"ALP\":\n              drColorsTemp.push(\"rgb(0, 144, 255)\");\n\n              if (alp === 0) {\n                drDashesTemp.push([]);\n                alp++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"ALT\":\n              drColorsTemp.push(\"rgb(43, 69, 98)\");\n\n              if (alt === 0) {\n                drDashesTemp.push([]);\n                alt++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"AST\":\n              drColorsTemp.push(\"rgb(0, 111, 98)\");\n\n              if (ast === 0) {\n                drDashesTemp.push([]);\n                ast++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"FER\":\n              drColorsTemp.push(\"rgb(220, 0, 0)\");\n\n              if (fer === 0) {\n                drDashesTemp.push([]);\n                fer++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"HAA\":\n              drColorsTemp.push(\"rgb(0, 0, 0)\");\n\n              if (haa === 0) {\n                drDashesTemp.push([]);\n                haa++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"MCL\":\n              drColorsTemp.push(\"rgb(255, 152, 0)\");\n\n              if (mcl === 0) {\n                drDashesTemp.push([]);\n                mcl++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"MER\":\n              drColorsTemp.push(\"rgb(0, 210, 190)\");\n\n              if (mer === 0) {\n                drDashesTemp.push([]);\n                mer++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"RED\":\n              drColorsTemp.push(\"rgb(6, 0, 239)\");\n\n              if (red === 0) {\n                drDashesTemp.push([]);\n                red++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"WIL\":\n              drColorsTemp.push(\"rgb(0, 90, 255)\");\n\n              if (wil === 0) {\n                drDashesTemp.push([]);\n                wil++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            default:\n          }\n        } else {\n          crNamesTemp.push(player.display_name);\n\n          switch (player.team_abbreviation) {\n            case \"ALF\":\n              crColorsTemp.push(\"rgb(144, 0, 0)\");\n              break;\n\n            case \"ALP\":\n              crColorsTemp.push(\"rgb(0, 144, 255)\");\n              break;\n\n            case \"ALT\":\n              crColorsTemp.push(\"rgb(43, 69, 98)\");\n              break;\n\n            case \"AST\":\n              crColorsTemp.push(\"rgb(0, 111, 98)\");\n              break;\n\n            case \"FER\":\n              crColorsTemp.push(\"rgb(220, 0, 0)\");\n              break;\n\n            case \"HAA\":\n              crColorsTemp.push(\"rgb(255, 255, 255)\");\n              break;\n\n            case \"MCL\":\n              crColorsTemp.push(\"rgb(255, 152, 0)\");\n              break;\n\n            case \"MER\":\n              crColorsTemp.push(\"rgb(0, 210, 190)\");\n              break;\n\n            case \"RED\":\n              crColorsTemp.push(\"rgb(6, 0, 239)\");\n              break;\n\n            case \"WIL\":\n              crColorsTemp.push(\"rgb(0, 90, 255)\");\n              break;\n\n            default:\n          }\n        }\n\n        let seasonPrices = [];\n\n        for (let j = 0; j < player.season_prices.length; j++) {\n          seasonPrices.push(parseFloat(player.season_prices[j].price));\n        }\n\n        if (player.position === \"Driver\") {\n          drPriceHistoriesTemp.push(seasonPrices);\n        } else {\n          crPriceHistoriesTemp.push(seasonPrices);\n        }\n      }\n\n      let numberOfWeeks = drPriceHistoriesTemp[0].length;\n\n      for (let i = 1; i <= numberOfWeeks; i++) {\n        weeksTemp.push(i);\n      }\n\n      setWeeks(weeksTemp);\n      setDrNames(drNamesTemp);\n      setDrPriceHistories(drPriceHistoriesTemp);\n      setCrNames(crNamesTemp);\n      setCrPriceHistories(crPriceHistoriesTemp);\n      setDrColors(drColorsTemp);\n      setDrDashes(drDashesTemp);\n      setCrColors(crColorsTemp);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  console.log(weeks, weeks.length);\n  console.log(drNames, drNames.length);\n  console.log(drPriceHistories, drPriceHistories.length);\n  console.log(crNames, crNames.length);\n  console.log(crPriceHistories, crPriceHistories.length);\n  console.log(drColors, drColors.length);\n  console.log(drDashes, drDashes.length);\n  console.log(crColors, crColors.length);\n  let drDatasets = [];\n\n  for (let i = 0; i < drNames.length; i++) {\n    drDatasets.push({\n      label: drNames[i],\n      data: drPriceHistories[i],\n      backgroundColor: drColors[i],\n      borderColor: drColors[i],\n      borderDash: drDashes[i],\n      borderWidth: 1\n    });\n  }\n\n  let drOptions = {\n    plugins: {\n      title: {\n        display: true,\n        fullSize: false,\n        padding: 30,\n        text: \"Drivers' Price Per Round\",\n        color: \"rgb(0, 0, 0)\",\n        font: {\n          size: 30\n        }\n      },\n      legend: {\n        display: true,\n        fullSize: false,\n        title: {\n          display: true,\n          text: \"Drivers\",\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            size: 20\n          }\n        },\n        labels: {\n          boxWidth: 12,\n          boxHeight: 12,\n          padding: 20\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Rounds\",\n          padding: 20,\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            size: 20\n          }\n        },\n        ticks: {\n          font: {\n            size: 15\n          }\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Price   (Millions of $)\",\n          padding: 20,\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            size: 20\n          }\n        },\n        ticks: {\n          callback: function (value) {\n            return '$' + value;\n          },\n          font: {\n            size: 15\n          }\n        },\n        min: 0,\n        max: 35\n      }\n    }\n  };\n  let crDatasets = [];\n\n  for (let i = 0; i < crNames.length; i++) {\n    crDatasets.push({\n      label: crNames[i],\n      data: crPriceHistories[i],\n      backgroundColor: crColors[i],\n      borderColor: crColors[i]\n    });\n  }\n\n  const drData = {\n    labels: weeks,\n    datasets: drDatasets\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"F1 Fantasy Prices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: drData,\n      options: drOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"nLjSkye9MdhcDLjxAWYjjTSVIPE=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/src/components/Chart.js"],"names":["React","useEffect","useState","Line","axios","registerables","Chart","quickSort","arr","left","right","pivot","partitionIndex","partition","pivotValue","team_abbreviation","i","swap","console","log","j","temp","weeks","setWeeks","drNames","setDrNames","drPriceHistories","setDrPriceHistories","crNames","setCrNames","crPriceHistories","setCrPriceHistories","drColors","setDrColors","drDashes","setDrDashes","crColors","setCrColors","alf","alp","alt","ast","haa","fer","mcl","mer","red","wil","players","weeksTemp","drNamesTemp","drPriceHistoriesTemp","crNamesTemp","crPriceHistoriesTemp","drColorsTemp","drDashesTemp","crColorsTemp","get","then","res","data","length","push","player","position","display_name","seasonPrices","season_prices","parseFloat","price","numberOfWeeks","catch","err","drDatasets","label","backgroundColor","borderColor","borderDash","borderWidth","drOptions","plugins","title","display","fullSize","padding","text","color","font","size","legend","labels","boxWidth","boxHeight","scales","x","ticks","y","callback","value","min","max","crDatasets","drData","datasets"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\"\nimport { registerables } from \"chart.js\";\n\nfunction Chart() {\n    function quickSort(arr, left, right) {\n        let pivot, partitionIndex;\n\n        if(left < right) {\n            pivot = right;\n            partitionIndex = partition(arr, pivot, left, right);\n            quickSort(arr, left, partitionIndex - 1);\n            quickSort(arr, partition + 1, right);\n        }\n        return arr;\n    }\n\n    function partition(arr, pivot, left, right) {\n        let pivotValue = arr[pivot].team_abbreviation;\n        let partitionIndex = left;\n\n        for(let i = left; i < right; i++) {\n            if(arr[i].team_abbreviation < pivotValue) {\n                swap(arr, i, partitionIndex);\n                partitionIndex++;\n            }\n        }\n        swap(arr, right, partitionIndex);\n        console.log(arr);\n        return partitionIndex;\n    }\n\n    function swap(arr, i, j) {\n        let temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n\n    const [weeks, setWeeks] = useState([]);\n    const [drNames, setDrNames] = useState([]);\n    const [drPriceHistories, setDrPriceHistories] = useState([]);\n    const [crNames, setCrNames] = useState([]);\n    const [crPriceHistories, setCrPriceHistories] = useState([]);\n    const [drColors, setDrColors] = useState([]);\n    const [drDashes, setDrDashes] = useState([]);\n    const [crColors, setCrColors] = useState([]);\n\n    let alf = 0;\n    let alp = 0;\n    let alt = 0;\n    let ast = 0;\n    let haa = 0;\n    let fer = 0;\n    let mcl = 0;\n    let mer = 0;\n    let red = 0;\n    let wil = 0;\n\n    useEffect(() => {\n        let players = [];\n        let weeksTemp = [];\n        let drNamesTemp = [];\n        let drPriceHistoriesTemp = [];\n        let crNamesTemp = [];\n        let crPriceHistoriesTemp = [];\n        let drColorsTemp = [];\n        let drDashesTemp = [];\n        let crColorsTemp = [];\n\n        axios\n            .get(\"https://fantasy-api.formula1.com/partner_games/f1/players#\")\n            .then(res => {\n                console.log(res);\n\n                for(let i = 0; i < res.data.players.length; i++) {\n                    players.push(res.data.players[i]);\n                }\n\n                quickSort(players, 0, players.length - 1);\n                console.log(players);\n                    \n                for(let i = 0; i < res.data.players.length; i++) {\n                    let player = res.data.players[i];\n\n                    if(player.position === \"Driver\") {\n                        drNamesTemp.push(player.display_name);\n\n                        switch(player.team_abbreviation) {\n                            case \"ALF\":\n                                drColorsTemp.push(\"rgb(144, 0, 0)\");\n\n                                if(alf === 0) {\n                                    drDashesTemp.push([]);\n                                    alf++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"ALP\":\n                                drColorsTemp.push(\"rgb(0, 144, 255)\");\n\n                                if(alp === 0) {\n                                    drDashesTemp.push([]);\n                                    alp++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"ALT\":\n                                drColorsTemp.push(\"rgb(43, 69, 98)\");\n\n                                if(alt === 0) {\n                                    drDashesTemp.push([]);\n                                    alt++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"AST\":\n                                drColorsTemp.push(\"rgb(0, 111, 98)\");\n\n                                if(ast === 0) {\n                                    drDashesTemp.push([]);\n                                    ast++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"FER\":\n                                drColorsTemp.push(\"rgb(220, 0, 0)\");\n\n                                if(fer === 0) {\n                                    drDashesTemp.push([]);\n                                    fer++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"HAA\":\n                                drColorsTemp.push(\"rgb(0, 0, 0)\");\n\n                                if(haa === 0) {\n                                    drDashesTemp.push([]);\n                                    haa++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"MCL\":\n                                drColorsTemp.push(\"rgb(255, 152, 0)\");\n\n                                if(mcl === 0) {\n                                    drDashesTemp.push([]);\n                                    mcl++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"MER\":\n                                drColorsTemp.push(\"rgb(0, 210, 190)\");\n\n                                if(mer === 0) {\n                                    drDashesTemp.push([]);\n                                    mer++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"RED\":\n                                drColorsTemp.push(\"rgb(6, 0, 239)\");\n\n                                if(red === 0) {\n                                    drDashesTemp.push([]);\n                                    red++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"WIL\":\n                                drColorsTemp.push(\"rgb(0, 90, 255)\");\n\n                                if(wil === 0) {\n                                    drDashesTemp.push([]);\n                                    wil++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break; \n                            default:  \n                        }\n                    } else {\n                        crNamesTemp.push(player.display_name);\n\n                        switch(player.team_abbreviation) {\n                            case \"ALF\":\n                                crColorsTemp.push(\"rgb(144, 0, 0)\");\n                                break;\n                            case \"ALP\":\n                                crColorsTemp.push(\"rgb(0, 144, 255)\");\n                                break;\n                            case \"ALT\":\n                                crColorsTemp.push(\"rgb(43, 69, 98)\");\n                                break;\n                            case \"AST\":\n                                crColorsTemp.push(\"rgb(0, 111, 98)\");\n                                break;\n                            case \"FER\":\n                                crColorsTemp.push(\"rgb(220, 0, 0)\");\n                                break;\n                            case \"HAA\":\n                                crColorsTemp.push(\"rgb(255, 255, 255)\");\n                                break;\n                            case \"MCL\":\n                                crColorsTemp.push(\"rgb(255, 152, 0)\");\n                                break;\n                            case \"MER\":\n                                crColorsTemp.push(\"rgb(0, 210, 190)\");\n                                break;\n                            case \"RED\":\n                                crColorsTemp.push(\"rgb(6, 0, 239)\");\n                                break;\n                            case \"WIL\":\n                                crColorsTemp.push(\"rgb(0, 90, 255)\");\n                                break;\n                            default:\n                        }  \n                    }\n\n                    let seasonPrices = [];\n                    for(let j = 0; j < player.season_prices.length; j++) {\n                        seasonPrices.push(parseFloat(player.season_prices[j].price));\n                    }\n                    if(player.position === \"Driver\") {\n                        drPriceHistoriesTemp.push(seasonPrices);\n                    } else {\n                        crPriceHistoriesTemp.push(seasonPrices);\n                    }\n                }\n\n                let numberOfWeeks = drPriceHistoriesTemp[0].length;\n                for(let i = 1; i <= numberOfWeeks; i++) {\n                    weeksTemp.push(i);\n                }\n\n                setWeeks(weeksTemp);\n                setDrNames(drNamesTemp);\n                setDrPriceHistories(drPriceHistoriesTemp);\n                setCrNames(crNamesTemp);\n                setCrPriceHistories(crPriceHistoriesTemp);\n                setDrColors(drColorsTemp);\n                setDrDashes(drDashesTemp);\n                setCrColors(crColorsTemp);\n            })\n            .catch(err => {\n                console.log(err);\n            }) \n    }, []);\n\n    console.log(weeks, weeks.length);\n    console.log(drNames, drNames.length);\n    console.log(drPriceHistories, drPriceHistories.length);\n    console.log(crNames, crNames.length);\n    console.log(crPriceHistories, crPriceHistories.length);\n    console.log(drColors, drColors.length);\n    console.log(drDashes, drDashes.length);\n    console.log(crColors, crColors.length);\n\n    let drDatasets = []\n    for(let i = 0; i < drNames.length; i++) {\n        drDatasets.push({\n            label: drNames[i],\n            data: drPriceHistories[i],\n            backgroundColor: drColors[i],\n            borderColor: drColors[i],\n            borderDash: drDashes[i],\n            borderWidth: 1\n        });\n    }\n\n    let drOptions = {\n        plugins: {\n            title: {\n                display: true,\n                fullSize: false,\n                padding: 30,\n                text: \"Drivers' Price Per Round\",\n                color: \"rgb(0, 0, 0)\",\n                font: {\n                    size: 30\n                }\n            },\n            legend: {\n                display: true,\n                fullSize: false,\n                title: {\n                    display: true,\n                    text: \"Drivers\",\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        size: 20\n                    }\n                },\n                labels: {\n                    boxWidth: 12,\n                    boxHeight: 12,\n                    padding: 20,\n                }\n            }\n        },\n        scales: {\n            x: {\n                title: {\n                    display: true,\n                    text: \"Rounds\",\n                    padding: 20,\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        size: 20\n                    }\n                },\n                ticks: {\n                    font: {\n                        size: 15\n                    }\n                }\n            },\n            y: {\n                title: {\n                    display: true,\n                    text: \"Price   (Millions of $)\",\n                    padding: 20,\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        size: 20\n                    }\n                },\n                ticks: {\n                    callback: function(value) {\n                        return '$' + value;\n                    },\n                    font: {\n                        size: 15\n                    }\n                },\n                min: 0,\n                max: 35\n            }\n        }\n    }\n\n    let crDatasets = []\n    for(let i = 0; i < crNames.length; i++) {\n        crDatasets.push({\n            label: crNames[i],\n            data: crPriceHistories[i],\n            backgroundColor: crColors[i],\n            borderColor: crColors[i],\n        });\n    }\n\n    const drData = {\n        labels: weeks,\n        datasets: drDatasets\n    };\n\n    return (\n        <div>\n            <h1>F1 Fantasy Prices</h1>\n            <Line data={drData} options={drOptions} />\n        </div>\n    );\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}