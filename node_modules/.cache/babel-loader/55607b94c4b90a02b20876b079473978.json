{"ast":null,"code":"var _jsxFileName = \"/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/src/components/Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport Poll from \"./Poll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart() {\n  _s();\n\n  function quickSort(arr, left, right) {\n    let pivot, partitionIndex;\n\n    if (left < right) {\n      pivot = right;\n      partitionIndex = partition(arr, pivot, left, right);\n      quickSort(arr, left, partitionIndex - 1);\n      quickSort(arr, partitionIndex + 1, right);\n    }\n\n    return arr;\n  }\n\n  function partition(arr, pivot, left, right) {\n    let pivotValue = arr[pivot].season_score;\n    let partitionIndex = left;\n\n    for (let i = left; i < right; i++) {\n      if (arr[i].season_score > pivotValue) {\n        swap(arr, i, partitionIndex);\n        partitionIndex++;\n      }\n    }\n\n    swap(arr, right, partitionIndex);\n    return partitionIndex;\n  }\n\n  function swap(arr, i, j) {\n    let temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n\n  const [weeks, setWeeks] = useState([]);\n  const [drNames, setDrNames] = useState([]);\n  const [drPriceHistories, setDrPriceHistories] = useState([]);\n  const [crNames, setCrNames] = useState([]);\n  const [crPriceHistories, setCrPriceHistories] = useState([]);\n  const [drColors, setDrColors] = useState([]);\n  const [drBgColors, setDrBgColors] = useState([]);\n  const [drDashes, setDrDashes] = useState([]);\n  const [drTeamAbbr, setDrTeamAbbr] = useState([]);\n  const [crColors, setCrColors] = useState([]);\n  const [crBgColors, setCrBgColors] = useState([]);\n  const [crTeamAbbr, setCrTeamAbbr] = useState([]);\n  let alf = 0;\n  let alp = 0;\n  let alt = 0;\n  let ast = 0;\n  let haa = 0;\n  let fer = 0;\n  let mcl = 0;\n  let mer = 0;\n  let red = 0;\n  let wil = 0;\n  useEffect(() => {\n    let players = [];\n    let weeksTemp = [];\n    let drNamesTemp = [];\n    let drPriceHistoriesTemp = [];\n    let crNamesTemp = [];\n    let crPriceHistoriesTemp = [];\n    let drColorsTemp = [];\n    let drBgColorsTemp = [];\n    let drDashesTemp = [];\n    let drTeamAbbrTemp = [];\n    let crColorsTemp = [];\n    let crBgColorsTemp = [];\n    let crTeamAbbrTemp = [];\n    axios.get(\"https://fantasy-api.formula1.com/partner_games/f1/players#\").then(res => {\n      console.log(res);\n\n      for (let i = 0; i < res.data.players.length; i++) {\n        players.push(res.data.players[i]);\n      }\n\n      quickSort(players, 0, players.length - 1);\n      console.log(players);\n\n      for (let i = 0; i < players.length; i++) {\n        let player = players[i];\n\n        if (player.position === \"Driver\") {\n          drNamesTemp.push(player.display_name);\n          drTeamAbbrTemp.push(player.team_abbreviation);\n\n          switch (player.team_abbreviation) {\n            case \"ALF\":\n              drColorsTemp.push(\"rgb(144, 0, 0)\");\n              drBgColorsTemp.push(\"rgba(144, 0, 0, 0.5)\");\n\n              if (alf === 0) {\n                drDashesTemp.push([]);\n                alf++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"ALP\":\n              drColorsTemp.push(\"rgb(0, 144, 255)\");\n              drBgColorsTemp.push(\"rgba(0, 144, 255, 0.5)\");\n\n              if (alp === 0) {\n                drDashesTemp.push([]);\n                alp++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"ALT\":\n              drColorsTemp.push(\"rgb(43, 69, 98)\");\n              drBgColorsTemp.push(\"rgba(43, 69, 98, 0.5)\");\n\n              if (alt === 0) {\n                drDashesTemp.push([]);\n                alt++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"AST\":\n              drColorsTemp.push(\"rgb(0, 111, 98)\");\n              drBgColorsTemp.push(\"rgba(0, 111, 98, 0.5)\");\n\n              if (ast === 0) {\n                drDashesTemp.push([]);\n                ast++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"FER\":\n              drColorsTemp.push(\"rgb(220, 0, 0)\");\n              drBgColorsTemp.push(\"rgba(220, 0, 0, 0.5)\");\n\n              if (fer === 0) {\n                drDashesTemp.push([]);\n                fer++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"HAA\":\n              drColorsTemp.push(\"rgb(0, 0, 0)\");\n              drBgColorsTemp.push(\"rgba(0, 0, 0, 0.5)\");\n\n              if (haa === 0) {\n                drDashesTemp.push([]);\n                haa++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"MCL\":\n              drColorsTemp.push(\"rgb(255, 152, 0)\");\n              drBgColorsTemp.push(\"rgba(255, 152, 0, 0.5)\");\n\n              if (mcl === 0) {\n                drDashesTemp.push([]);\n                mcl++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"MER\":\n              drColorsTemp.push(\"rgb(0, 210, 190)\");\n              drBgColorsTemp.push(\"rgba(0, 210, 190, 0.5)\");\n\n              if (mer === 0) {\n                drDashesTemp.push([]);\n                mer++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"RED\":\n              drColorsTemp.push(\"rgb(6, 0, 239)\");\n              drBgColorsTemp.push(\"rgba(6, 0, 239, 0.5)\");\n\n              if (red === 0) {\n                drDashesTemp.push([]);\n                red++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            case \"WIL\":\n              drColorsTemp.push(\"rgb(0, 90, 255)\");\n              drBgColorsTemp.push(\"rgba(0, 90, 255, 0.5)\");\n\n              if (wil === 0) {\n                drDashesTemp.push([]);\n                wil++;\n              } else {\n                drDashesTemp.push([4]);\n              }\n\n              break;\n\n            default:\n          }\n        } else {\n          crNamesTemp.push(player.display_name);\n          crTeamAbbrTemp.push(player.team_abbreviation);\n\n          switch (player.team_abbreviation) {\n            case \"ALF\":\n              crColorsTemp.push(\"rgb(144, 0, 0)\");\n              crBgColorsTemp.push(\"rgba(144, 0, 0, 0.5)\");\n              break;\n\n            case \"ALP\":\n              crColorsTemp.push(\"rgb(0, 144, 255)\");\n              crBgColorsTemp.push(\"rgba(0, 144, 255, 0.5)\");\n              break;\n\n            case \"ALT\":\n              crColorsTemp.push(\"rgb(43, 69, 98)\");\n              crBgColorsTemp.push(\"rgba(43, 69, 98, 0.5)\");\n              break;\n\n            case \"AST\":\n              crColorsTemp.push(\"rgb(0, 111, 98)\");\n              crBgColorsTemp.push(\"rgba(0, 111, 98, 0.5)\");\n              break;\n\n            case \"FER\":\n              crColorsTemp.push(\"rgb(220, 0, 0)\");\n              crBgColorsTemp.push(\"rgba(220, 0, 0, 0.5)\");\n              break;\n\n            case \"HAA\":\n              crColorsTemp.push(\"rgb(0, 0, 0)\");\n              crBgColorsTemp.push(\"rgba(0, 0, 0, 0.5)\");\n              break;\n\n            case \"MCL\":\n              crColorsTemp.push(\"rgb(255, 152, 0)\");\n              crBgColorsTemp.push(\"rgba(255, 152, 0, 0.5)\");\n              break;\n\n            case \"MER\":\n              crColorsTemp.push(\"rgb(0, 210, 190)\");\n              crBgColorsTemp.push(\"rgba(0, 210, 190, 0.5)\");\n              break;\n\n            case \"RED\":\n              crColorsTemp.push(\"rgb(6, 0, 239)\");\n              crBgColorsTemp.push(\"rgba(6, 0, 239, 0.5)\");\n              break;\n\n            case \"WIL\":\n              crColorsTemp.push(\"rgb(0, 90, 255)\");\n              crBgColorsTemp.push(\"rgba(0, 90, 255, 0.5)\");\n              break;\n\n            default:\n          }\n        }\n\n        let seasonPrices = [];\n\n        for (let j = 0; j < player.season_prices.length; j++) {\n          seasonPrices.push(parseFloat(player.season_prices[j].price));\n        }\n\n        if (player.position === \"Driver\") {\n          drPriceHistoriesTemp.push(seasonPrices);\n        } else {\n          crPriceHistoriesTemp.push(seasonPrices);\n        }\n      }\n\n      let numberOfWeeks = drPriceHistoriesTemp[0].length;\n\n      for (let i = 1; i <= numberOfWeeks; i++) {\n        weeksTemp.push(i);\n      }\n\n      setWeeks(weeksTemp);\n      setDrNames(drNamesTemp);\n      setDrPriceHistories(drPriceHistoriesTemp);\n      setCrNames(crNamesTemp);\n      setCrPriceHistories(crPriceHistoriesTemp);\n      setDrColors(drColorsTemp);\n      setDrBgColors(drBgColorsTemp);\n      setDrDashes(drDashesTemp);\n      setDrTeamAbbr(drTeamAbbrTemp);\n      setCrColors(crColorsTemp);\n      setCrBgColors(crBgColorsTemp);\n      setCrTeamAbbr(crTeamAbbrTemp);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  let lastNames = [];\n\n  for (let i = 0; i < drNames.length; i++) {\n    lastNames.push(drNames[i].slice(3));\n  }\n\n  console.log(weeks, weeks.length);\n  console.log(drNames, drNames.length);\n  console.log(drPriceHistories, drPriceHistories.length);\n  console.log(crNames, crNames.length);\n  console.log(crPriceHistories, crPriceHistories.length);\n  console.log(drColors, drColors.length);\n  console.log(drDashes, drDashes.length);\n  console.log(drTeamAbbr, drTeamAbbr.length);\n  console.log(crColors, crColors.length);\n  console.log(crTeamAbbr, crTeamAbbr.length);\n  let drDatasets = [];\n\n  for (let i = 0; i < drNames.length; i++) {\n    drDatasets.push({\n      label: drNames[i],\n      data: drPriceHistories[i],\n      backgroundColor: drBgColors[i],\n      borderColor: drColors[i],\n      borderDash: drDashes[i],\n      borderWidth: 1.5,\n      pointBackgroundColor: drColors[i]\n    });\n  }\n\n  let drOptions = {\n    plugins: {\n      title: {\n        display: true,\n        fullSize: false,\n        padding: 30,\n        text: \"Drivers' Price Per Round\",\n        color: \"rgb(0, 0, 0)\",\n        font: {\n          family: \"'Titillium Web', sans-serif\",\n          weight: \"700\",\n          size: 30\n        }\n      },\n      legend: {\n        display: true,\n        fullSize: false,\n        title: {\n          display: true,\n          text: \"Drivers (Most to Least Fantasy Points)\",\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            style: \"italic\",\n            size: 20\n          }\n        },\n        labels: {\n          boxWidth: 12,\n          boxHeight: 12,\n          padding: 20,\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\"\n          }\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title: function (context) {\n            return \"Round \" + context[0].label;\n          },\n          label: function (context) {\n            let label = context.dataset.label + \": \";\n            label += '$' + context.parsed.y + \" M\";\n            return label;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Rounds\",\n          padding: 20,\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 20\n          }\n        },\n        ticks: {\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 15\n          }\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Price (Millions of $)\",\n          padding: 20,\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 20\n          }\n        },\n        ticks: {\n          callback: function (value) {\n            return '$' + value;\n          },\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 15\n          }\n        },\n        min: 0,\n        max: 35\n      }\n    },\n    aspectRatio: 1.5\n  };\n  const drData = {\n    labels: weeks,\n    datasets: drDatasets\n  };\n  let crDatasets = [];\n\n  for (let i = 0; i < crNames.length; i++) {\n    crDatasets.push({\n      label: crNames[i],\n      data: crPriceHistories[i],\n      backgroundColor: crBgColors[i],\n      borderColor: crColors[i],\n      borderWidth: 1.5,\n      pointBackgroundColor: crColors[i]\n    });\n  }\n\n  let crOptions = {\n    plugins: {\n      title: {\n        display: true,\n        fullSize: false,\n        padding: 30,\n        text: \"Constructors' Price Per Round\",\n        color: \"rgb(0, 0, 0)\",\n        font: {\n          family: \"'Titillium Web', sans-serif\",\n          weight: \"700\",\n          size: 30\n        }\n      },\n      legend: {\n        display: true,\n        fullSize: false,\n        title: {\n          display: true,\n          text: \"Constructors (Most to Least Fantasy Points)\",\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            style: \"italic\",\n            size: 20\n          }\n        },\n        labels: {\n          boxWidth: 12,\n          boxHeight: 12,\n          padding: 20\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title: function (context) {\n            return \"Round \" + context[0].label;\n          },\n          label: function (context) {\n            let label = context.dataset.label + \": \";\n            label += '$' + context.parsed.y + \" M\";\n            return label;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Rounds\",\n          padding: 20,\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 20\n          }\n        },\n        ticks: {\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 15\n          }\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Price (Millions of $)\",\n          padding: 20,\n          color: \"rgb(0, 0, 0)\",\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 20\n          }\n        },\n        ticks: {\n          callback: function (value) {\n            return '$' + value;\n          },\n          font: {\n            family: \"'Titillium Web', sans-serif\",\n            weight: \"400\",\n            size: 15\n          }\n        },\n        min: 0,\n        max: 40\n      }\n    },\n    aspectRatio: 1.5\n  };\n  const crData = {\n    labels: weeks,\n    datasets: crDatasets\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: drData,\n        options: drOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Poll, {\n      idNames: drTeamAbbr,\n      displayNames: drNames,\n      colors: drColors,\n      bgColors: drBgColors,\n      chartId: \"drChart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: crData,\n        options: crOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Poll, {\n      idNames: crTeamAbbr,\n      displayNames: crNames,\n      colors: crColors,\n      bgColors: crBgColors,\n      chartId: \"crChart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 542,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"T99vzvzN9QYEai2YrJia19Y8TDs=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/ericvaughan/Desktop/Web-Dev/Web-Dev-Projects/f1-fantasy/src/components/Chart.js"],"names":["React","useEffect","useState","Line","axios","Poll","Chart","quickSort","arr","left","right","pivot","partitionIndex","partition","pivotValue","season_score","i","swap","j","temp","weeks","setWeeks","drNames","setDrNames","drPriceHistories","setDrPriceHistories","crNames","setCrNames","crPriceHistories","setCrPriceHistories","drColors","setDrColors","drBgColors","setDrBgColors","drDashes","setDrDashes","drTeamAbbr","setDrTeamAbbr","crColors","setCrColors","crBgColors","setCrBgColors","crTeamAbbr","setCrTeamAbbr","alf","alp","alt","ast","haa","fer","mcl","mer","red","wil","players","weeksTemp","drNamesTemp","drPriceHistoriesTemp","crNamesTemp","crPriceHistoriesTemp","drColorsTemp","drBgColorsTemp","drDashesTemp","drTeamAbbrTemp","crColorsTemp","crBgColorsTemp","crTeamAbbrTemp","get","then","res","console","log","data","length","push","player","position","display_name","team_abbreviation","seasonPrices","season_prices","parseFloat","price","numberOfWeeks","catch","err","lastNames","slice","drDatasets","label","backgroundColor","borderColor","borderDash","borderWidth","pointBackgroundColor","drOptions","plugins","title","display","fullSize","padding","text","color","font","family","weight","size","legend","style","labels","boxWidth","boxHeight","tooltip","callbacks","context","dataset","parsed","y","scales","x","ticks","callback","value","min","max","aspectRatio","drData","datasets","crDatasets","crOptions","crData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport Poll from \"./Poll\";\n\nfunction Chart() {\n    function quickSort(arr, left, right) {\n        let pivot, partitionIndex;\n\n        if(left < right) {\n            pivot = right;\n            partitionIndex = partition(arr, pivot, left, right);\n            quickSort(arr, left, partitionIndex - 1);\n            quickSort(arr, partitionIndex + 1, right);\n        }\n        return arr;\n    }\n\n    function partition(arr, pivot, left, right) {\n        let pivotValue = arr[pivot].season_score;\n        let partitionIndex = left;\n\n        for(let i = left; i < right; i++) {\n            if(arr[i].season_score > pivotValue) {\n                swap(arr, i, partitionIndex);\n                partitionIndex++;\n            }\n        }\n        swap(arr, right, partitionIndex);\n        return partitionIndex;\n    }\n\n    function swap(arr, i, j) {\n        let temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n\n    const [weeks, setWeeks] = useState([]);\n    const [drNames, setDrNames] = useState([]);\n    const [drPriceHistories, setDrPriceHistories] = useState([]);\n    const [crNames, setCrNames] = useState([]);\n    const [crPriceHistories, setCrPriceHistories] = useState([]);\n    const [drColors, setDrColors] = useState([]);\n    const [drBgColors, setDrBgColors] = useState([]);\n    const [drDashes, setDrDashes] = useState([]);\n    const [drTeamAbbr, setDrTeamAbbr] = useState([]);\n    const [crColors, setCrColors] = useState([]);\n    const [crBgColors, setCrBgColors] = useState([]);\n    const [crTeamAbbr, setCrTeamAbbr] = useState([]);\n\n    let alf = 0;\n    let alp = 0;\n    let alt = 0;\n    let ast = 0;\n    let haa = 0;\n    let fer = 0;\n    let mcl = 0;\n    let mer = 0;\n    let red = 0;\n    let wil = 0;\n\n    useEffect(() => {\n        let players = [];\n        let weeksTemp = [];\n        let drNamesTemp = [];\n        let drPriceHistoriesTemp = [];\n        let crNamesTemp = [];\n        let crPriceHistoriesTemp = [];\n        let drColorsTemp = [];\n        let drBgColorsTemp = [];\n        let drDashesTemp = [];\n        let drTeamAbbrTemp = []\n        let crColorsTemp = [];\n        let crBgColorsTemp = [];\n        let crTeamAbbrTemp = [];\n\n        axios\n            .get(\"https://fantasy-api.formula1.com/partner_games/f1/players#\")\n            .then(res => {\n                console.log(res);\n\n                for(let i = 0; i < res.data.players.length; i++) {\n                    players.push(res.data.players[i]);\n                }\n                quickSort(players, 0, players.length - 1);\n                console.log(players);\n                    \n                for(let i = 0; i < players.length; i++) {\n                    let player = players[i];\n\n                    if(player.position === \"Driver\") {\n                        drNamesTemp.push(player.display_name);\n                        drTeamAbbrTemp.push(player.team_abbreviation);\n\n                        switch(player.team_abbreviation) {\n                            case \"ALF\":\n                                drColorsTemp.push(\"rgb(144, 0, 0)\");\n                                drBgColorsTemp.push(\"rgba(144, 0, 0, 0.5)\");\n\n                                if(alf === 0) {\n                                    drDashesTemp.push([]);\n                                    alf++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"ALP\":\n                                drColorsTemp.push(\"rgb(0, 144, 255)\");\n                                drBgColorsTemp.push(\"rgba(0, 144, 255, 0.5)\");\n\n                                if(alp === 0) {\n                                    drDashesTemp.push([]);\n                                    alp++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"ALT\":\n                                drColorsTemp.push(\"rgb(43, 69, 98)\");\n                                drBgColorsTemp.push(\"rgba(43, 69, 98, 0.5)\");\n\n                                if(alt === 0) {\n                                    drDashesTemp.push([]);\n                                    alt++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"AST\":\n                                drColorsTemp.push(\"rgb(0, 111, 98)\");\n                                drBgColorsTemp.push(\"rgba(0, 111, 98, 0.5)\");\n\n                                if(ast === 0) {\n                                    drDashesTemp.push([]);\n                                    ast++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"FER\":\n                                drColorsTemp.push(\"rgb(220, 0, 0)\");\n                                drBgColorsTemp.push(\"rgba(220, 0, 0, 0.5)\");\n\n                                if(fer === 0) {\n                                    drDashesTemp.push([]);\n                                    fer++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"HAA\":\n                                drColorsTemp.push(\"rgb(0, 0, 0)\");\n                                drBgColorsTemp.push(\"rgba(0, 0, 0, 0.5)\");\n\n                                if(haa === 0) {\n                                    drDashesTemp.push([]);\n                                    haa++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"MCL\":\n                                drColorsTemp.push(\"rgb(255, 152, 0)\");\n                                drBgColorsTemp.push(\"rgba(255, 152, 0, 0.5)\");\n\n                                if(mcl === 0) {\n                                    drDashesTemp.push([]);\n                                    mcl++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"MER\":\n                                drColorsTemp.push(\"rgb(0, 210, 190)\");\n                                drBgColorsTemp.push(\"rgba(0, 210, 190, 0.5)\");\n\n                                if(mer === 0) {\n                                    drDashesTemp.push([]);\n                                    mer++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"RED\":\n                                drColorsTemp.push(\"rgb(6, 0, 239)\");\n                                drBgColorsTemp.push(\"rgba(6, 0, 239, 0.5)\");\n\n                                if(red === 0) {\n                                    drDashesTemp.push([]);\n                                    red++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break;\n                            case \"WIL\":\n                                drColorsTemp.push(\"rgb(0, 90, 255)\");\n                                drBgColorsTemp.push(\"rgba(0, 90, 255, 0.5)\");\n\n                                if(wil === 0) {\n                                    drDashesTemp.push([]);\n                                    wil++;\n                                } else {\n                                    drDashesTemp.push([4]);\n                                }\n                                break; \n                            default:  \n                        }\n                    } else {\n                        crNamesTemp.push(player.display_name);\n                        crTeamAbbrTemp.push(player.team_abbreviation);\n\n                        switch(player.team_abbreviation) {\n                            case \"ALF\":\n                                crColorsTemp.push(\"rgb(144, 0, 0)\");\n                                crBgColorsTemp.push(\"rgba(144, 0, 0, 0.5)\");\n                                break;\n                            case \"ALP\":\n                                crColorsTemp.push(\"rgb(0, 144, 255)\");\n                                crBgColorsTemp.push(\"rgba(0, 144, 255, 0.5)\");\n                                break;\n                            case \"ALT\":\n                                crColorsTemp.push(\"rgb(43, 69, 98)\");\n                                crBgColorsTemp.push(\"rgba(43, 69, 98, 0.5)\");\n                                break;\n                            case \"AST\":\n                                crColorsTemp.push(\"rgb(0, 111, 98)\");\n                                crBgColorsTemp.push(\"rgba(0, 111, 98, 0.5)\");\n                                break;\n                            case \"FER\":\n                                crColorsTemp.push(\"rgb(220, 0, 0)\");\n                                crBgColorsTemp.push(\"rgba(220, 0, 0, 0.5)\");\n                                break;\n                            case \"HAA\":\n                                crColorsTemp.push(\"rgb(0, 0, 0)\");\n                                crBgColorsTemp.push(\"rgba(0, 0, 0, 0.5)\");\n                                break;\n                            case \"MCL\":\n                                crColorsTemp.push(\"rgb(255, 152, 0)\");\n                                crBgColorsTemp.push(\"rgba(255, 152, 0, 0.5)\");\n                                break;\n                            case \"MER\":\n                                crColorsTemp.push(\"rgb(0, 210, 190)\");\n                                crBgColorsTemp.push(\"rgba(0, 210, 190, 0.5)\");\n                                break;\n                            case \"RED\":\n                                crColorsTemp.push(\"rgb(6, 0, 239)\");\n                                crBgColorsTemp.push(\"rgba(6, 0, 239, 0.5)\");\n                                break;\n                            case \"WIL\":\n                                crColorsTemp.push(\"rgb(0, 90, 255)\");\n                                crBgColorsTemp.push(\"rgba(0, 90, 255, 0.5)\");\n                                break;\n                            default:\n                        }  \n                    }\n\n                    let seasonPrices = [];\n                    for(let j = 0; j < player.season_prices.length; j++) {\n                        seasonPrices.push(parseFloat(player.season_prices[j].price));\n                    }\n                    if(player.position === \"Driver\") {\n                        drPriceHistoriesTemp.push(seasonPrices);\n                    } else {\n                        crPriceHistoriesTemp.push(seasonPrices);\n                    }\n                }\n\n                let numberOfWeeks = drPriceHistoriesTemp[0].length;\n                for(let i = 1; i <= numberOfWeeks; i++) {\n                    weeksTemp.push(i);\n                }\n\n                setWeeks(weeksTemp);\n                setDrNames(drNamesTemp);\n                setDrPriceHistories(drPriceHistoriesTemp);\n                setCrNames(crNamesTemp);\n                setCrPriceHistories(crPriceHistoriesTemp);\n                setDrColors(drColorsTemp);\n                setDrBgColors(drBgColorsTemp);\n                setDrDashes(drDashesTemp);\n                setDrTeamAbbr(drTeamAbbrTemp);\n                setCrColors(crColorsTemp);\n                setCrBgColors(crBgColorsTemp);\n                setCrTeamAbbr(crTeamAbbrTemp);\n            })\n            .catch(err => {\n                console.log(err);\n            }) \n    }, []);\n\n    let lastNames = [];\n    for (let i = 0; i < drNames.length; i++) {\n        lastNames.push(drNames[i].slice(3));\n    }\n\n    console.log(weeks, weeks.length);\n    console.log(drNames, drNames.length);\n    console.log(drPriceHistories, drPriceHistories.length);\n    console.log(crNames, crNames.length);\n    console.log(crPriceHistories, crPriceHistories.length);\n    console.log(drColors, drColors.length);\n    console.log(drDashes, drDashes.length);\n    console.log(drTeamAbbr, drTeamAbbr.length);\n    console.log(crColors, crColors.length);\n    console.log(crTeamAbbr, crTeamAbbr.length);\n\n    let drDatasets = []\n    for(let i = 0; i < drNames.length; i++) {\n        drDatasets.push({\n            label: drNames[i],\n            data: drPriceHistories[i],\n            backgroundColor: drBgColors[i],\n            borderColor: drColors[i],\n            borderDash: drDashes[i],\n            borderWidth: 1.5,\n            pointBackgroundColor: drColors[i]\n        });\n    }\n\n    let drOptions = {\n        plugins: {\n            title: {\n                display: true,\n                fullSize: false,\n                padding: 30,\n                text: \"Drivers' Price Per Round\",\n                color: \"rgb(0, 0, 0)\",\n                font: {\n                    family: \"'Titillium Web', sans-serif\",\n                    weight: \"700\",\n                    size: 30\n                }\n            },\n            legend: {\n                display: true,\n                fullSize: false,\n                title: {\n                    display: true,\n                    text: \"Drivers (Most to Least Fantasy Points)\",\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        style: \"italic\",\n                        size: 20\n                    }\n                },\n                labels: {\n                    boxWidth: 12,\n                    boxHeight: 12,\n                    padding: 20,\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                    }\n                }\n            },\n            tooltip: {\n                callbacks: {\n                    title: function(context) { \n                        return \"Round \" + context[0].label;\n                    },\n                    label: function(context) {\n                        let label = context.dataset.label + \": \";\n                        label += ('$' + context.parsed.y + \" M\");\n                        return label;\n                    }\n                }\n            }\n        },\n        scales: {\n            x: {\n                title: {\n                    display: true,\n                    text: \"Rounds\",\n                    padding: 20,\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 20\n                    }\n                },\n                ticks: {\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 15\n                    }\n                }\n            },\n            y: {\n                title: {\n                    display: true,\n                    text: \"Price (Millions of $)\",\n                    padding: 20,\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 20\n                    }\n                },\n                ticks: {\n                    callback: function(value) {\n                        return '$' + value;\n                    },\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 15\n                    }\n                },\n                min: 0,\n                max: 35\n            }\n        },\n        aspectRatio: 1.5\n    }\n\n    const drData = {\n        labels: weeks,\n        datasets: drDatasets\n    };\n\n    let crDatasets = []\n    for(let i = 0; i < crNames.length; i++) {\n        crDatasets.push({\n            label: crNames[i],\n            data: crPriceHistories[i],\n            backgroundColor: crBgColors[i],\n            borderColor: crColors[i],\n            borderWidth: 1.5,\n            pointBackgroundColor: crColors[i]\n        });\n    }\n\n    let crOptions = {\n        plugins: {\n            title: {\n                display: true,\n                fullSize: false,\n                padding: 30,\n                text: \"Constructors' Price Per Round\",\n                color: \"rgb(0, 0, 0)\",\n                font: {\n                    family: \"'Titillium Web', sans-serif\",\n                    weight: \"700\",\n                    size: 30\n                }\n            },\n            legend: {\n                display: true,\n                fullSize: false,\n                title: {\n                    display: true,\n                    text: \"Constructors (Most to Least Fantasy Points)\",\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        style: \"italic\",\n                        size: 20\n                    }\n                },\n                labels: {\n                    boxWidth: 12,\n                    boxHeight: 12,\n                    padding: 20,\n                }\n            },\n            tooltip: {\n                callbacks: {\n                    title: function(context) { \n                        return \"Round \" + context[0].label;\n                    },\n                    label: function(context) {\n                        let label = context.dataset.label + \": \";\n                        label += ('$' + context.parsed.y + \" M\");\n                        return label;\n                    }\n                }\n            }\n        },\n        scales: {\n            x: {\n                title: {\n                    display: true,\n                    text: \"Rounds\",\n                    padding: 20,\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 20\n                    }\n                },\n                ticks: {\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 15\n                    }\n                }\n            },\n            y: {\n                title: {\n                    display: true,\n                    text: \"Price (Millions of $)\",\n                    padding: 20,\n                    color: \"rgb(0, 0, 0)\",\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 20\n                    }\n                },\n                ticks: {\n                    callback: function(value) {\n                        return '$' + value;\n                    },\n                    font: {\n                        family: \"'Titillium Web', sans-serif\",\n                        weight: \"400\",\n                        size: 15\n                    }\n                },\n                min: 0,\n                max: 40\n            }\n        },\n        aspectRatio: 1.5\n    }\n\n    const crData = {\n        labels: weeks,\n        datasets: crDatasets\n    }\n\n    return (\n        <div>\n            <div className=\"chart\"> \n                <Line data={drData} options={drOptions} />\n            </div>\n            <Poll \n                idNames={drTeamAbbr} \n                displayNames={drNames} \n                colors={drColors} \n                bgColors={drBgColors} \n                chartId={\"drChart\"} \n            />\n            <div className=\"chart\">\n                <Line data={crData} options={crOptions} />\n            </div>\n            <Poll \n                idNames={crTeamAbbr} \n                displayNames={crNames} \n                colors={crColors} \n                bgColors={crBgColors} \n                chartId={\"crChart\"} \n            />\n        </div>\n    );\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}